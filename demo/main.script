local app_window = require("demo.app.window")

local sprites_objs = { 
    "/sprite1",
    "/sprite1_moving",
    "/sprite1_straight",
    "/sprite1_rotation"
}

local sprites_names = {
    "sprite_mipmap_off",
    "sprite_mipmap_on",
    "sprite_mipmap_bias",
    "sprite_rgss",
    "sprite_rgss_bias"
}

local function find_selected(self, group_num)
    local g = self.g[group_num]
    for i, b in pairs(g) do
        if b.selected then
            return i, b
        end
    end
    return 1, g[1]
end

local function select_button(self, group, num)
    local _, b = find_selected(self, group)
    b.selected = false
    msg.post(b.receiver, "changed", b)

    local g = self.g[group]
    local b = g[num]
    b.selected = true
    msg.post(b.receiver, "changed", b)
end

local function disable_sprite(self, i)
    for _, obj in pairs(sprites_objs) do
        msg.post(msg.url(nil, obj, sprites_names[i]), "disable")
    end
end

local function enable_sprite(self, i)
    for _, obj in pairs(sprites_objs) do
        msg.post(msg.url(nil, obj, sprites_names[i]), "enable")
    end
end

local function activate_group(self, group_num)
    for gi, g in pairs(self.g) do
        for i, b in pairs(g) do
            if b.active then
                b.active = false
                msg.post(b.receiver, "changed", b)

                disable_sprite(self, i)
            end
        end
    end

    local g = self.g[group_num]
    for i, b in pairs(g) do
        if b.selected then
            b.active = true
            msg.post(b.receiver, "changed", b)

            enable_sprite(self, i)
        end
    end
end

function init(self)
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
    msg.post(".", "acquire_input_focus")

    app_window.resize()
    app_window.center()

    self.g = { {}, {} }

    for i, _ in pairs(sprites_names) do
        disable_sprite(self, i)
    end
end

function on_message(self, msg_id, m, sender)
    if msg_id == hash("button_init") then
        self.g[m.group][m.num] = { receiver = sender, selected = m.selected, active = false }

        if m.group == 1 and m.selected then
            activate_group(self, 1)
        end
    elseif msg_id == hash("button_pressed") then
        select_button(self, m.group, m.num)

        activate_group(self, m.group)
    elseif msg_id == hash("button_released") then
        if m.group == 2 then
            activate_group(self, 1)
        end
    end
end
